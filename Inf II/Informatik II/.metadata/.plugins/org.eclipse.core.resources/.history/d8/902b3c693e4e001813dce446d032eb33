package stackTest;

import static org.junit.Assert.*;
import static org.junit.jupiter.api.Assertions.assertEquals;

import org.junit.jupiter.api.Test;

import Stack.ArrayStack.ArrayStack;

class StackTest {
   
    // isEmpty(push(x,s)) = false
    @Test
    public void isEmpty_push() {
	ArrayStack<Integer> aStack = new ArrayStack<Integer>(1);
	aStack.push(5);
	//assertTrue
	assertFalse(aStack.isEmpty());
    }
    // isEmpty() == true
    @Test
    public void isEmpty_true()
    {
	ArrayStack<Integer> aStack = new ArrayStack<Integer>(1);
	assertTrue(aStack.isEmpty());
	aStack.push(5);
	aStack.pop();
	assertTrue(aStack.isEmpty());
    }
    // top(push(x,s)) = x
    @Test
    public void top_push()
    {
	ArrayStack<Integer> aStack = new ArrayStack<Integer>(2);
	aStack.push(3);
	assertEquals((int)aStack.top(),3);
	
    }
    // popTop(s) = top(s), ignore
    @Test
    public void popTop_top()
    {
	ArrayStack<Integer> aStack = new ArrayStack<Integer>(2);
	aStack.push(3);
	aStack.push(5);
	assertEquals(aStack.poptop(), aStack.top());
    }

}
