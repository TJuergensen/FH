<?xml version="1.0" encoding="UTF-8"?><testrun name="StackTest" project="Inf II" tests="11" started="11" failures="1" errors="3" ignored="0">
  <testsuite name="stackTest.StackTest" time="0.024" displayname="StackTest" uniqueid="[engine:junit-jupiter]/[class:stackTest.StackTest]">
    <testcase name="popTop_top_pop" classname="stackTest.StackTest" time="0.008" displayname="popTop_top_pop()" uniqueid="[engine:junit-jupiter]/[class:stackTest.StackTest]/[method:popTop_top_pop()]">
      <error>stack.StackError&#13;
	at stack.AbstractStack.poptop(AbstractStack.java:11)&#13;
	at stackTest.StackTest.popTop_top_pop(StackTest.java:131)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:167)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:163)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:110)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(Unknown Source)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Unknown Source)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(Unknown Source)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(Unknown Source)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(Unknown Source)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(Unknown Source)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(Unknown Source)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(Unknown Source)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Unknown Source)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(Unknown Source)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(Unknown Source)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(Unknown Source)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(Unknown Source)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(Unknown Source)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)&#13;
&#13;
</error>
    </testcase>
    <testcase name="push_top_pop" classname="stackTest.StackTest" time="0.001" displayname="push_top_pop()" uniqueid="[engine:junit-jupiter]/[class:stackTest.StackTest]/[method:push_top_pop()]">
      <error>stack.StackError&#13;
	at stack.ArrayStack.ArrayStack.top(ArrayStack.java:53)&#13;
	at stackTest.StackTest.push_top_pop(StackTest.java:114)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:167)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:163)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:110)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(Unknown Source)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Unknown Source)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(Unknown Source)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(Unknown Source)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(Unknown Source)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(Unknown Source)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(Unknown Source)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(Unknown Source)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Unknown Source)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(Unknown Source)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(Unknown Source)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(Unknown Source)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(Unknown Source)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(Unknown Source)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)&#13;
&#13;
</error>
    </testcase>
    <testcase name="pop_empty" classname="stackTest.StackTest" time="0.002" displayname="pop_empty()" uniqueid="[engine:junit-jupiter]/[class:stackTest.StackTest]/[method:pop_empty()]"/>
    <testcase name="popTop_top" classname="stackTest.StackTest" time="0.003" displayname="popTop_top()" uniqueid="[engine:junit-jupiter]/[class:stackTest.StackTest]/[method:popTop_top()]"/>
    <testcase name="top_push" classname="stackTest.StackTest" time="0.001" displayname="top_push()" uniqueid="[engine:junit-jupiter]/[class:stackTest.StackTest]/[method:top_push()]"/>
    <testcase name="poptop_empty" classname="stackTest.StackTest" time="0.001" displayname="poptop_empty()" uniqueid="[engine:junit-jupiter]/[class:stackTest.StackTest]/[method:poptop_empty()]"/>
    <testcase name="push_popTop" classname="stackTest.StackTest" time="0.001" displayname="push_popTop()" uniqueid="[engine:junit-jupiter]/[class:stackTest.StackTest]/[method:push_popTop()]">
      <error>stack.StackError&#13;
	at stack.AbstractStack.poptop(AbstractStack.java:11)&#13;
	at stackTest.StackTest.push_popTop(StackTest.java:148)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:167)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:163)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:110)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(Unknown Source)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Unknown Source)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(Unknown Source)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(Unknown Source)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(Unknown Source)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(Unknown Source)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(Unknown Source)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(Unknown Source)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Unknown Source)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(Unknown Source)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(Unknown Source)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(Unknown Source)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(Unknown Source)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(Unknown Source)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)&#13;
&#13;
</error>
    </testcase>
    <testcase name="top_empty" classname="stackTest.StackTest" time="0.001" displayname="top_empty()" uniqueid="[engine:junit-jupiter]/[class:stackTest.StackTest]/[method:top_empty()]"/>
    <testcase name="pop_push" classname="stackTest.StackTest" time="0.001" displayname="pop_push()" uniqueid="[engine:junit-jupiter]/[class:stackTest.StackTest]/[method:pop_push()]">
      <failure>java.lang.AssertionError&#13;
	at org.junit.Assert.fail(Assert.java:86)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at org.junit.Assert.assertTrue(Assert.java:52)&#13;
	at stackTest.StackTest.pop_push(StackTest.java:92)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:167)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:163)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:110)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(Unknown Source)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Unknown Source)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(Unknown Source)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(Unknown Source)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(Unknown Source)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(Unknown Source)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(Unknown Source)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(Unknown Source)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)&#13;
	at java.base/java.util.Iterator.forEachRemaining(Unknown Source)&#13;
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(Unknown Source)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(Unknown Source)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(Unknown Source)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(Unknown Source)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(Unknown Source)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="isEmpty_push" classname="stackTest.StackTest" time="0.001" displayname="isEmpty_push()" uniqueid="[engine:junit-jupiter]/[class:stackTest.StackTest]/[method:isEmpty_push()]"/>
    <testcase name="isEmpty_true" classname="stackTest.StackTest" time="0.003" displayname="isEmpty_true()" uniqueid="[engine:junit-jupiter]/[class:stackTest.StackTest]/[method:isEmpty_true()]"/>
  </testsuite>
</testrun>
